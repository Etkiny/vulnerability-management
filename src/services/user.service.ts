import UserRepository from '../repositories/user.repository';
import { Users } from '@entities';
import { common as commonHelper } from '@helpers';

interface UserDetails {
    name: string;
    email: string;
    phoneNumber: string;
    password: string;
}

class UserService {
    async registerUser(userDetails: UserDetails): Promise<Users> {
        try {
            const existingUser = await UserRepository.getUserByEmail(userDetails.email);
            if (existingUser) {
                throw new Error('User with this email already exists');
            }

            const userNumber = commonHelper.generateRandomString(16);
            const hashedPassword = await commonHelper.hashPassword(userDetails.password);

            return UserRepository.createUser({
                ...userDetails,
                userNumber,
                password: hashedPassword
            });
        } catch (error) {
            console.error('Error in UserService.registerUser:', error);
            throw new Error('Error registering user');
        }
    }
}

export default new UserService();
