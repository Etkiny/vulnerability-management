import axios from 'axios';
import { date as dateHelper } from 'helpers';

interface Description {
    lang: string;
    value: string;
}

interface Reference {
    url: string;
    source: string;
}

interface CVE {
    id: string;
    sourceIdentifier: string;
    published: string;
    lastModified: string;
    vulnStatus: string;
    descriptions: Description[];
    metrics: object;
    references: Reference[];
}

interface Vulnerability {
    cve: CVE;
}

interface NVDResponse {
    vulnerabilities?: Vulnerability[];
}

export const fetchVulnerabilities = async (): Promise<Vulnerability[]> => {
    const baseUrl = 'https://services.nvd.nist.gov/rest/json/cves/2.0';
    const endDate = dateHelper.nowDate().utc().format('YYYY-MM-DDTHH:mm:ss.SSS[Z]');
    const startDate = dateHelper.nowDate().subtract(30, 'days').utc().format('YYYY-MM-DDTHH:mm:ss.SSS[Z]');

    try {
        const response = await axios.get<NVDResponse>(`${baseUrl}?pubStartDate=${startDate}&pubEndDate=${endDate}`);
        console.log('API response:', JSON.stringify(response.data, null, 2));

        const vulnerabilities = response.data.vulnerabilities;
        if (!vulnerabilities || vulnerabilities.length === 0) {
            throw new Error('No vulnerabilities found in the response');
        }
        return vulnerabilities;
    } catch (error) {
        console.error('Error fetching data from NVD:', error);
        return [];
    }
};
