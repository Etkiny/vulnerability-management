import { Users } from '../entities';
import { Postgres } from '../database';

class UserRepository {
    async createUser(userDetails: Partial<Users>): Promise<Users> {
        try {
            return Postgres.entities.users.create({ ...userDetails });
        } catch (error) {
            throw new Error('Error creating user');
        }
    }

    async getUserByEmail(email: string): Promise<Users | null> {
        try {
            return Postgres.entities.users.findOne({ where: { email } });
        } catch (error) {
            throw new Error('Error fetching user by email');
        }
    }

    async getUser(userId: number): Promise<Users | null> {
        try {
            return Postgres.entities.users.findByPk(userId);
        } catch (error) {
            throw new Error('Error fetching user');
        }
    }

    async getAllUsers(): Promise<Users[]> {
        try {
            return Postgres.entities.users.findAll();
        } catch (error) {
            throw new Error('Error fetching users');
        }
    }

    async getUserByUsernumber(userNumber: string): Promise<Users | null> {
        try {
            return Postgres.entities.users.findOne({ where: { userNumber } });
        } catch (error) {
            throw new Error('Error fetching user by userNumber');
        }
    }
}

export default new UserRepository();
