import {
    Table,
    Model,
    Column,
    PrimaryKey,
    AutoIncrement,
    Index,
    DataType,
    Default,
    AllowNull,
    Unique,
    HasMany
} from 'sequelize-typescript';
import { date as dateHelper } from 'helpers';
import { userProductMap } from './userProductMap.entity';

@Table({
    tableName: 'Users',
    createdAt: 'createdAt',
    timestamps: true
})
class Users extends Model {
    @PrimaryKey
    @AutoIncrement
    @Column(DataType.INTEGER)
    id!: number;

    @Unique
    @AllowNull(false)
    @Column(DataType.STRING)
    userNumber!: string;

    @AllowNull(false)
    @Column(DataType.STRING)
    name!: string;

    @Unique
    @AllowNull(false)
    @Index('users_email_idx')
    @Column(DataType.STRING)
    email!: string;

    @Unique
    @Index('users_phoneNumber_idx')
    @Column(DataType.STRING)
    phoneNumber!: string;

    @AllowNull(false)
    @Column(DataType.TEXT)
    password!: string;

    @AllowNull(false)
    @Index('users_status_idx')
    @Default('ACTIVE')
    @Column(DataType.STRING)
    status!: string;

    @AllowNull(false)
    @Index('users_createdAt_idx')
    @Default(() => dateHelper.nowDateWithToDate())
    @Column(DataType.DATE)
    createdAt!: Date;

    @HasMany(() => userProductMap, {
        sourceKey: 'userNumber'
    })
    userProductMap!: userProductMap[];
}

export { Users };
