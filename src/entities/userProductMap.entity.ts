import {
    Table,
    Model,
    Column,
    PrimaryKey,
    AutoIncrement,
    Index,
    DataType,
    Default,
    AllowNull,
    Unique,
    ForeignKey,
    BelongsTo
} from 'sequelize-typescript';
import { date as dateHelper } from 'helpers';
import { Users } from './users.entity';
import { Products } from './products.entity';

@Table({
    tableName: 'userProductMap',
    createdAt: 'createdAt',
    timestamps: false
})
class userProductMap extends Model {
    @PrimaryKey
    @AutoIncrement
    @Column(DataType.INTEGER)
    id!: number;

    @ForeignKey(() => Products)
    @AllowNull(false)
    @Column(DataType.STRING)
    productNumber!: string;

    @ForeignKey(() => Users)
    @AllowNull(false)
    @Column(DataType.STRING)
    userNumber!: string;

    @AllowNull(false)
    @Index('userProductMap_status_idx')
    @Default('ACTIVE')
    @Column(DataType.STRING)
    status!: string;

    @AllowNull(false)
    @Index('userProductMap_createdAt_idx')
    @Default(() => dateHelper.nowDateWithToDate())
    @Column(DataType.DATE)
    createdAt!: Date;

    @BelongsTo(() => Products, 'productNumber')
    product!: Products;

    @BelongsTo(() => Users, 'userNumber')
    user!: Users;
}

export { userProductMap };
